<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE.
value = 0; // 대미지 값.
type = 0; // 종류.
move_speed = 16; // 이동 속도.

caster = noone; // 쏜 자신.
target = noone; // 상대 타겟.
destroy = false; // 삭제 대상인지.

alarm[0] = (1 * room_speed); // 자동 제거.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 시간 지나면 자동 제거.
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 시야에 들어와 있는지 연산하는 변수입니다.
f_x = min(max(round(x / Obj_Game_System.fog_scale), 0), Obj_Game_System.fog_room_width);
f_y = min(max(round(y / Obj_Game_System.fog_scale), 0), Obj_Game_System.fog_room_height);

depth = room_height - y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 대미지 처리.
if (global.lock_step == false)
{
    path_speed = move_speed;
    var _x = x + lengthdir_x(path_speed, image_angle);
    var _y = y + lengthdir_y(path_speed, image_angle);
    x = _x; y = _y;
    
    if (instance_exists(target) == true)
    {
        image_angle = point_direction(x, y, target.x, target.y);

        var _place = instance_place(x, y, target);
        if (instance_exists(_place) == true)
        {
            var _damage = value;
            var _defense_type = _place.defense_type;
            var _percent = 100;
            switch(type)
            {
                case 0: break;
                case 1: 
                {
                    switch(_defense_type)
                    {
                        case 0: break;
                        case 1: _percent = 100; break;
                        case 2: _percent = 75; break;
                        case 3: _percent = 50; break;
                    }
                    break;
                }
                case 2: 
                {
                    switch(_defense_type)
                    {
                        case 0: break;
                        case 1: _percent = 50; break;
                        case 2: _percent = 100; break;
                        case 3: _percent = 50; break;
                    }
                    break;
                }
                case 3: 
                {
                    switch(_defense_type)
                    {
                        case 0: break;
                        case 1: _percent = 50; break;
                        case 2: _percent = 75; break;
                        case 3: _percent = 100; break;
                    }
                    break;
                }
            }
            var _defense = _place.defense_value;
            _damage = ((_damage * _percent) / 100);
            _damage = (_damage - ((_damage * _defense) / 100));
            _damage = ceil(_damage);
            _place.hp -= _damage; // 대미지 처리.

            // 공격자의 정보를 담습니다.
            if (instance_exists(caster) == true)
            {
                _place.hit = true;
                _place.hit_caster = caster;
                _place.hit_floor = caster.set_floor;
                _place.hit_alarm = _place.hit_alarm_max;
                
                if (global.set_team == caster.set_team)
                &amp;&amp; (global.set_team != _place.set_team)
                {ds_list_add(global.list_sight_alarm, _place.id, (2 * room_speed));}
            }
            destroy = true;
        }
    }
    else
    {
        destroy = true;
    }
}
else
{
    path_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 적 피격 파티클 생성.
if (instance_exists(target) == true)
{
    part_particles_create(Obj_Part_System.system_part, x, y, target.hit_part, target.hit_part_number);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 드로우.
if (view_xview[0] &lt;= bbox_right &amp;&amp; bbox_left &lt;= view_xview[0] + view_wview[0] &amp;&amp; view_yview[0] &lt;= bbox_bottom &amp;&amp; bbox_top &lt;= view_yview[0] + view_hview[0]) 
&amp;&amp; (ds_grid_get(Obj_Game_System.fog_grid, f_x, f_y) == 0)
{
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
