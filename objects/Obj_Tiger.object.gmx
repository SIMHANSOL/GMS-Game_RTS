<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Lizard_Body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_Unit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 설정.
event_inherited();

name = "Tiger"; // 이름.
hp_max = 300;
hp = hp_max; // 체력.
mp_max = 100;
mp = mp_max; // 마나.
attack_type = 2; // 공격 타입. -1은 공격이 없다.
attack_value = 5; // 공격력.
attack_speed = (0.2 * room_speed); // 공격 속도.
attack_time = 0;
attack_range = (32 * 4); // 공격 사거리 6칸.
attack_target = noone; // 불렛에 넘겨줄 대상 오브젝트.
attack_first = false; // 첫 포커스 대상인지 확인하는 변수.
attack_sense_range = (32 * 8); // 공격 대상을 자동으로 인지하는 범위.
attack_create_range = 32; // 탄환이 생성되는 좌표.
defense_type = 3; // 방어 타입.
defense_value = 10; // 방어력.
sight_range = (32 * 8) + 31; // 시야 6칸 (기본).
move_speed = ((2 * global.target_fps) / room_speed); // 이동 속도.
priority = 1; // 명령창 우선도.
select_size = 16; // 선택시 드로우될 사이즈.
mini_map_size = 6; // 미니맵에서 보일 사이즈. 
unit_stat_number = 4; // GUI에 드로우 될 스프라이트 번호.
supply = 1;

sprite[0] = Spr_Tiger_Head_Stand; // 정지 스프라이트.
sprite[1] = Spr_Tiger_Head_Stand; // 이동중 스프라이트.
sprite[2] = Spr_Tiger_Head_Stand; // 공격 스프라이트.
sprite[3] = Spr_Tiger_Head_Stand; // 공격중 스프라이트.
mask_index = Spr_Lizard_Body;

// GUI에 명령을 뿌릴 변수입니다. []은 순서입니다.
get_command[0] = 0; // 정지.
get_command[1] = 3; // 홀드.
get_command[2] = 1; // 이동.
get_command[3] = -1; // 공격.
get_command[4] = -1; // 5.
get_command[5] = -1; // 6.
get_command[6] = -1; // 7.
get_command[7] = -1; // 없음.

// 쉐이더 시스템.
colour_to_find = shader_get_uniform(shader_set_colour, "f_Colour1");
colour_to_set = shader_get_uniform(shader_set_colour, "f_Colour2");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw.
if (view_xview[0] &lt;= bbox_right &amp;&amp; bbox_left &lt;= view_xview[0] + view_wview[0] &amp;&amp; view_yview[0] &lt;= bbox_bottom &amp;&amp; bbox_top &lt;= view_yview[0] + view_hview[0]) 
&amp;&amp; (ds_grid_get(Obj_Game_System.fog_grid, f_x, f_y) == 0)
&amp;&amp; (shader_is_compiled(shader_set_colour))
{
    shader_set(shader_set_colour);
    shader_set_uniform_f(colour_to_find, 1, 0, 0);       
    shader_set_uniform_f(colour_to_set, global.get_colour_rgb[set_colour, 0], global.get_colour_rgb[set_colour, 1], global.get_colour_rgb[set_colour, 2]); // R, G, B.
    draw_sprite_ext(Spr_Lizard_Body, image_index, x, y, image_xscale, image_yscale, direction, image_blend, image_alpha);   
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, direction, image_blend, image_alpha);   
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
